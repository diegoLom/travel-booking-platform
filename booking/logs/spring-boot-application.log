08/08/2024 21:54:16 - Starting BookingApplication using Java 17.0.8.1 with PID 153176 (D:\sources\california\travel-booking-platform\booking\target\classes started by dsantana in D:\sources\california\travel-booking-platform\booking)
08/08/2024 21:54:16 - Running with Spring Boot v3.2.3, Spring v6.1.4
08/08/2024 21:54:16 - The following 1 profile is active: "dev"
08/08/2024 21:54:16 - Fetching config from server at : http://localhost:8071/
08/08/2024 21:54:16 - Located environment: name=booking, profiles=[default], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 21:54:16 - Fetching config from server at : http://localhost:8071/
08/08/2024 21:54:16 - Located environment: name=booking, profiles=[dev], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 21:54:16 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
08/08/2024 21:54:16 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
08/08/2024 21:54:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
08/08/2024 21:54:20 - Finished Spring Data repository scanning in 414 ms. Found 1 JPA repository interface.
08/08/2024 21:54:21 - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
08/08/2024 21:54:21 - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
08/08/2024 21:54:22 - BeanFactory id=7c2eeedc-50aa-3c1c-b822-23c1bcc0b41f
08/08/2024 21:54:23 - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
08/08/2024 21:54:23 - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 21:54:23 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
08/08/2024 21:54:23 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 21:54:23 - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 21:54:24 - Tomcat initialized with port 8081 (http)
08/08/2024 21:54:24 - Starting service [Tomcat]
08/08/2024 21:54:24 - Starting Servlet engine: [Apache Tomcat/10.1.19]
08/08/2024 21:54:24 - Initializing Spring embedded WebApplicationContext
08/08/2024 21:54:24 - Root WebApplicationContext: initialization completed in 8732 ms
08/08/2024 21:54:25 - Filter 'webMvcObservationFilter' configured for use
08/08/2024 21:54:25 - jdbc:mysql://localhost:3308/bookingdb
08/08/2024 21:54:25 - root
08/08/2024 21:54:25 - Lo2011158
08/08/2024 21:54:25 - com.mysql.jdbc.Driver
08/08/2024 21:54:25 - HHH000204: Processing PersistenceUnitInfo [name: default]
08/08/2024 21:54:26 - HHH000412: Hibernate ORM core version 6.4.4.Final
08/08/2024 21:54:26 - HHH000026: Second-level cache disabled
08/08/2024 21:54:27 - No LoadTimeWeaver setup: ignoring JPA class transformer
08/08/2024 21:54:30 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
08/08/2024 21:54:30 - Initialized JPA EntityManagerFactory for persistence unit 'default'
08/08/2024 21:54:32 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
08/08/2024 21:54:32 - 10 mappings in 'requestMappingHandlerMapping'
08/08/2024 21:54:32 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
08/08/2024 21:54:32 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
08/08/2024 21:54:32 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
08/08/2024 21:54:36 - Channel 'booking.springCloudBusInput' has 1 subscriber(s).
08/08/2024 21:54:38 - LiveReload server is running on port 35729
08/08/2024 21:54:39 - Eureka HTTP Client uses RestTemplate.
08/08/2024 21:54:39 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
08/08/2024 21:54:40 - Exposing 23 endpoint(s) beneath base path '/actuator'
08/08/2024 21:54:40 - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
08/08/2024 21:54:40 - Channel 'booking.errorChannel' has 1 subscriber(s).
08/08/2024 21:54:40 - started bean '_org.springframework.integration.errorLogger'
08/08/2024 21:54:40 - Setting initial instance status as: STARTING
08/08/2024 21:54:40 - Initializing Eureka in region us-east-1
08/08/2024 21:54:40 - Resolving eureka endpoints via configuration
08/08/2024 21:54:40 - Disable delta property : false
08/08/2024 21:54:40 - Single vip registry refresh property : null
08/08/2024 21:54:40 - Force full registry fetch : false
08/08/2024 21:54:40 - Application is null : false
08/08/2024 21:54:40 - Registered Applications size is zero : true
08/08/2024 21:54:40 - Application version is -1: true
08/08/2024 21:54:40 - Getting all instance registry info from the eureka server
08/08/2024 21:54:41 - HTTP GET http://localhost:8070/eureka/apps/
08/08/2024 21:54:41 - Accept=[application/json, application/*+json]
08/08/2024 21:54:42 - Response 200 OK
08/08/2024 21:54:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:54:42 - The response status is 200
08/08/2024 21:54:42 - Starting heartbeat executor: renew interval is: 30
08/08/2024 21:54:42 - InstanceInfoReplicator onDemand update allowed rate per min is 4
08/08/2024 21:54:42 - Discovery Client initialized at timestamp 1723164882304 with initial instances count: 0
08/08/2024 21:54:42 - Registering application BOOKING with eureka with status UP
08/08/2024 21:54:42 - Saw local status change event StatusChangeEvent [timestamp=1723164882333, current=UP, previous=STARTING]
08/08/2024 21:54:42 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081: registering service...
08/08/2024 21:54:42 - HTTP POST http://localhost:8070/eureka/apps/BOOKING
08/08/2024 21:54:42 - Accept=[application/json, application/*+json]
08/08/2024 21:54:42 - Writing [InstanceInfo [instanceId = LTAK285336.mercador.local:booking:8081, appName = BOOKING, hostName = 192.168.0.9, status = UP, ipAddr = 192.168.0.9, port = 8081, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@2d9b9974] as "application/json"
08/08/2024 21:54:42 - Tomcat started on port 8081 (http) with context path ''
08/08/2024 21:54:42 - Updating port to 8081
08/08/2024 21:54:42 - Response 204 NO_CONTENT
08/08/2024 21:54:42 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - registration status: 204
08/08/2024 21:54:43 - Creating binder: rabbit
08/08/2024 21:54:43 - Constructing binder child context for rabbit
08/08/2024 21:54:43 - Caching the binder: rabbit
08/08/2024 21:54:43 - declaring queue for inbound: springCloudBus.anonymous.x0iWnaCvS_qWjLabEjjUKQ, bound to: springCloudBus
08/08/2024 21:54:43 - Attempting to connect to: [localhost:5672]
08/08/2024 21:54:44 - Created new connection: rabbitConnectionFactory#4a3bcc47:0/SimpleConnection@8b0e769 [delegate=amqp://guest@127.0.0.1:5672/, localPort=55931]
08/08/2024 21:54:44 - Channel 'rabbit-737715862.springCloudBusInput.errors' has 1 subscriber(s).
08/08/2024 21:54:44 - Channel 'rabbit-737715862.springCloudBusInput.errors' has 2 subscriber(s).
08/08/2024 21:54:44 - started bean 'inbound.springCloudBus.anonymous.x0iWnaCvS_qWjLabEjjUKQ'
08/08/2024 21:54:44 - Started BookingApplication in 32.973 seconds (process running for 34.854)
08/08/2024 21:55:12 - Disable delta property : false
08/08/2024 21:55:12 - Single vip registry refresh property : null
08/08/2024 21:55:12 - Force full registry fetch : false
08/08/2024 21:55:12 - Application is null : false
08/08/2024 21:55:12 - Registered Applications size is zero : true
08/08/2024 21:55:12 - Application version is -1: false
08/08/2024 21:55:12 - Getting all instance registry info from the eureka server
08/08/2024 21:55:12 - HTTP GET http://localhost:8070/eureka/apps/
08/08/2024 21:55:12 - Accept=[application/json, application/*+json]
08/08/2024 21:55:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:55:12 - Response 200 OK
08/08/2024 21:55:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:55:12 - Accept=[application/json, application/*+json]
08/08/2024 21:55:12 - The response status is 200
08/08/2024 21:55:12 - Response 200 OK
08/08/2024 21:55:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 21:55:42 - Accept=[application/json, application/*+json]
08/08/2024 21:55:42 - Response 200 OK
08/08/2024 21:55:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:55:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:55:42 - Accept=[application/json, application/*+json]
08/08/2024 21:55:42 - Response 200 OK
08/08/2024 21:56:12 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 21:56:12 - Accept=[application/json, application/*+json]
08/08/2024 21:56:12 - Response 200 OK
08/08/2024 21:56:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:56:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:56:12 - Accept=[application/json, application/*+json]
08/08/2024 21:56:12 - Response 200 OK
08/08/2024 21:56:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 21:56:42 - Accept=[application/json, application/*+json]
08/08/2024 21:56:42 - Response 200 OK
08/08/2024 21:56:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:56:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:56:42 - Accept=[application/json, application/*+json]
08/08/2024 21:56:42 - Response 200 OK
08/08/2024 21:57:12 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 21:57:12 - Accept=[application/json, application/*+json]
08/08/2024 21:57:12 - Response 200 OK
08/08/2024 21:57:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:57:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:57:12 - Accept=[application/json, application/*+json]
08/08/2024 21:57:12 - Response 200 OK
08/08/2024 21:57:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 21:57:42 - Accept=[application/json, application/*+json]
08/08/2024 21:57:42 - Response 200 OK
08/08/2024 21:57:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:57:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:57:42 - Accept=[application/json, application/*+json]
08/08/2024 21:57:42 - Response 200 OK
08/08/2024 21:58:12 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 21:58:12 - Accept=[application/json, application/*+json]
08/08/2024 21:58:12 - Response 200 OK
08/08/2024 21:58:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:58:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:58:12 - Accept=[application/json, application/*+json]
08/08/2024 21:58:12 - Response 200 OK
08/08/2024 21:58:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 21:58:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:58:42 - Accept=[application/json, application/*+json]
08/08/2024 21:58:42 - Accept=[application/json, application/*+json]
08/08/2024 21:58:42 - Response 200 OK
08/08/2024 21:58:42 - Response 200 OK
08/08/2024 21:58:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:59:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:59:12 - Accept=[application/json, application/*+json]
08/08/2024 21:59:12 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 21:59:12 - Accept=[application/json, application/*+json]
08/08/2024 21:59:12 - Response 200 OK
08/08/2024 21:59:12 - Response 200 OK
08/08/2024 21:59:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 21:59:40 - Resolving eureka endpoints via configuration
08/08/2024 21:59:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 21:59:42 - Accept=[application/json, application/*+json]
08/08/2024 21:59:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 21:59:42 - Accept=[application/json, application/*+json]
08/08/2024 21:59:42 - Response 200 OK
08/08/2024 21:59:42 - Response 200 OK
08/08/2024 21:59:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:00:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:00:12 - Accept=[application/json, application/*+json]
08/08/2024 22:00:12 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:00:12 - Accept=[application/json, application/*+json]
08/08/2024 22:00:12 - Response 200 OK
08/08/2024 22:00:12 - Response 200 OK
08/08/2024 22:00:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:00:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:00:42 - Accept=[application/json, application/*+json]
08/08/2024 22:00:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:00:42 - Accept=[application/json, application/*+json]
08/08/2024 22:00:42 - Response 200 OK
08/08/2024 22:00:42 - Response 200 OK
08/08/2024 22:00:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:01:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:01:12 - Accept=[application/json, application/*+json]
08/08/2024 22:01:12 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:01:12 - Accept=[application/json, application/*+json]
08/08/2024 22:01:12 - Response 200 OK
08/08/2024 22:01:12 - Response 200 OK
08/08/2024 22:01:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:01:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:01:42 - Accept=[application/json, application/*+json]
08/08/2024 22:01:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:01:42 - Accept=[application/json, application/*+json]
08/08/2024 22:01:42 - Response 200 OK
08/08/2024 22:01:42 - Response 200 OK
08/08/2024 22:01:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:02:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:02:12 - Accept=[application/json, application/*+json]
08/08/2024 22:02:12 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:02:12 - Accept=[application/json, application/*+json]
08/08/2024 22:02:12 - Response 200 OK
08/08/2024 22:02:12 - Response 200 OK
08/08/2024 22:02:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:02:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:02:42 - Accept=[application/json, application/*+json]
08/08/2024 22:02:42 - Response 200 OK
08/08/2024 22:02:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:02:42 - Accept=[application/json, application/*+json]
08/08/2024 22:02:42 - Response 200 OK
08/08/2024 22:02:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:03:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:03:12 - Accept=[application/json, application/*+json]
08/08/2024 22:03:12 - Response 200 OK
08/08/2024 22:03:12 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:03:12 - Accept=[application/json, application/*+json]
08/08/2024 22:03:12 - Response 200 OK
08/08/2024 22:03:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:03:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:03:42 - Accept=[application/json, application/*+json]
08/08/2024 22:03:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:03:42 - Accept=[application/json, application/*+json]
08/08/2024 22:03:42 - Response 200 OK
08/08/2024 22:03:42 - Response 200 OK
08/08/2024 22:03:42 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:04:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:04:12 - Accept=[application/json, application/*+json]
08/08/2024 22:04:12 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:04:12 - Accept=[application/json, application/*+json]
08/08/2024 22:04:12 - Response 200 OK
08/08/2024 22:04:12 - Response 200 OK
08/08/2024 22:04:12 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:04:40 - Resolving eureka endpoints via configuration
08/08/2024 22:04:42 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:04:42 - Accept=[application/json, application/*+json]
08/08/2024 22:04:42 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:04:42 - Accept=[application/json, application/*+json]
08/08/2024 22:04:42 - Response 200 OK
08/08/2024 22:04:42 - Response 200 OK
08/08/2024 22:04:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:05:12 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:05:12 - Accept=[application/json, application/*+json]
08/08/2024 22:05:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:05:13 - Accept=[application/json, application/*+json]
08/08/2024 22:05:13 - Response 200 OK
08/08/2024 22:05:13 - Response 200 OK
08/08/2024 22:05:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:05:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:05:43 - Accept=[application/json, application/*+json]
08/08/2024 22:05:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:05:43 - Accept=[application/json, application/*+json]
08/08/2024 22:05:43 - Response 200 OK
08/08/2024 22:05:43 - Response 200 OK
08/08/2024 22:05:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:06:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:06:13 - Accept=[application/json, application/*+json]
08/08/2024 22:06:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:06:13 - Accept=[application/json, application/*+json]
08/08/2024 22:06:13 - Response 200 OK
08/08/2024 22:06:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:06:13 - Response 200 OK
08/08/2024 22:06:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:06:43 - Accept=[application/json, application/*+json]
08/08/2024 22:06:43 - Response 200 OK
08/08/2024 22:06:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:06:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:06:43 - Accept=[application/json, application/*+json]
08/08/2024 22:06:43 - Response 200 OK
08/08/2024 22:07:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:07:13 - Accept=[application/json, application/*+json]
08/08/2024 22:07:13 - Response 200 OK
08/08/2024 22:07:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:07:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:07:13 - Accept=[application/json, application/*+json]
08/08/2024 22:07:13 - Response 200 OK
08/08/2024 22:07:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:07:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:07:43 - Accept=[application/json, application/*+json]
08/08/2024 22:07:43 - Accept=[application/json, application/*+json]
08/08/2024 22:07:43 - Response 200 OK
08/08/2024 22:07:43 - Response 200 OK
08/08/2024 22:07:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:08:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:08:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:08:13 - Accept=[application/json, application/*+json]
08/08/2024 22:08:13 - Accept=[application/json, application/*+json]
08/08/2024 22:08:13 - Response 200 OK
08/08/2024 22:08:13 - Response 200 OK
08/08/2024 22:08:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:08:24 - Initializing Spring DispatcherServlet 'dispatcherServlet'
08/08/2024 22:08:24 - Initializing Servlet 'dispatcherServlet'
08/08/2024 22:08:24 - Detected StandardServletMultipartResolver
08/08/2024 22:08:24 - Detected AcceptHeaderLocaleResolver
08/08/2024 22:08:24 - Detected FixedThemeResolver
08/08/2024 22:08:24 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4f2b7666
08/08/2024 22:08:24 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2558eb0c
08/08/2024 22:08:24 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
08/08/2024 22:08:24 - Completed initialization in 5 ms
08/08/2024 22:08:24 - GET "/swagger-ui/index.html", parameters={}
08/08/2024 22:08:24 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
08/08/2024 22:08:24 - Completed 200 OK
08/08/2024 22:08:25 - GET "/swagger-ui/swagger-ui.css", parameters={}
08/08/2024 22:08:25 - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
08/08/2024 22:08:25 - GET "/swagger-ui/index.css", parameters={}
08/08/2024 22:08:25 - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
08/08/2024 22:08:25 - GET "/swagger-ui/swagger-initializer.js", parameters={}
08/08/2024 22:08:25 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
08/08/2024 22:08:25 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
08/08/2024 22:08:25 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
08/08/2024 22:08:25 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
08/08/2024 22:08:25 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
08/08/2024 22:08:25 - Completed 200 OK
08/08/2024 22:08:25 - Completed 200 OK
08/08/2024 22:08:25 - Completed 200 OK
08/08/2024 22:08:25 - Completed 200 OK
08/08/2024 22:08:25 - Completed 200 OK
08/08/2024 22:08:25 - GET "/v3/api-docs/swagger-config", parameters={}
08/08/2024 22:08:25 - GET "/swagger-ui/favicon-32x32.png", parameters={}
08/08/2024 22:08:25 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
08/08/2024 22:08:25 - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
08/08/2024 22:08:25 - Completed 200 OK
08/08/2024 22:08:25 - Using 'application/json', given [*/*] and supported [application/json]
08/08/2024 22:08:25 - Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8081/swagger-ui/oauth2-re (truncated)...]
08/08/2024 22:08:25 - Completed 200 OK
08/08/2024 22:08:25 - GET "/v3/api-docs", parameters={}
08/08/2024 22:08:25 - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
08/08/2024 22:08:27 - Init duration for springdoc-openapi is: 1327 ms
08/08/2024 22:08:27 - Using 'application/json', given [application/json, */*] and supported [application/json]
08/08/2024 22:08:27 - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
08/08/2024 22:08:27 - Completed 200 OK
08/08/2024 22:08:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:08:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:08:43 - Accept=[application/json, application/*+json]
08/08/2024 22:08:43 - Accept=[application/json, application/*+json]
08/08/2024 22:08:43 - Response 200 OK
08/08/2024 22:08:43 - Response 200 OK
08/08/2024 22:08:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:09:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:09:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:09:13 - Accept=[application/json, application/*+json]
08/08/2024 22:09:13 - Accept=[application/json, application/*+json]
08/08/2024 22:09:13 - Response 200 OK
08/08/2024 22:09:13 - Response 200 OK
08/08/2024 22:09:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:09:41 - Resolving eureka endpoints via configuration
08/08/2024 22:09:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:09:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:09:43 - Accept=[application/json, application/*+json]
08/08/2024 22:09:43 - Accept=[application/json, application/*+json]
08/08/2024 22:09:43 - Response 200 OK
08/08/2024 22:09:43 - Response 200 OK
08/08/2024 22:09:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:10:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:10:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:10:13 - Accept=[application/json, application/*+json]
08/08/2024 22:10:13 - Accept=[application/json, application/*+json]
08/08/2024 22:10:13 - Response 200 OK
08/08/2024 22:10:13 - Response 200 OK
08/08/2024 22:10:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:10:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:10:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:10:43 - Accept=[application/json, application/*+json]
08/08/2024 22:10:43 - Accept=[application/json, application/*+json]
08/08/2024 22:10:43 - Response 200 OK
08/08/2024 22:10:43 - Response 200 OK
08/08/2024 22:10:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:11:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:11:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:11:13 - Accept=[application/json, application/*+json]
08/08/2024 22:11:13 - Accept=[application/json, application/*+json]
08/08/2024 22:11:13 - Response 200 OK
08/08/2024 22:11:13 - Response 200 OK
08/08/2024 22:11:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:11:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:11:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:11:43 - Accept=[application/json, application/*+json]
08/08/2024 22:11:43 - Accept=[application/json, application/*+json]
08/08/2024 22:11:43 - Response 200 OK
08/08/2024 22:11:43 - Response 200 OK
08/08/2024 22:11:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:12:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:12:13 - Accept=[application/json, application/*+json]
08/08/2024 22:12:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:12:13 - Accept=[application/json, application/*+json]
08/08/2024 22:12:13 - Response 200 OK
08/08/2024 22:12:13 - Response 200 OK
08/08/2024 22:12:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:12:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:12:43 - Accept=[application/json, application/*+json]
08/08/2024 22:12:43 - Response 200 OK
08/08/2024 22:12:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:12:43 - Accept=[application/json, application/*+json]
08/08/2024 22:12:43 - Response 200 OK
08/08/2024 22:12:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:13:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:13:13 - Accept=[application/json, application/*+json]
08/08/2024 22:13:13 - Response 200 OK
08/08/2024 22:13:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:13:13 - Accept=[application/json, application/*+json]
08/08/2024 22:13:13 - Response 200 OK
08/08/2024 22:13:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:13:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:13:43 - Accept=[application/json, application/*+json]
08/08/2024 22:13:43 - Response 200 OK
08/08/2024 22:13:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:13:43 - Accept=[application/json, application/*+json]
08/08/2024 22:13:43 - Response 200 OK
08/08/2024 22:13:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:14:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:14:13 - Accept=[application/json, application/*+json]
08/08/2024 22:14:13 - Response 200 OK
08/08/2024 22:14:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:14:13 - Accept=[application/json, application/*+json]
08/08/2024 22:14:13 - Response 200 OK
08/08/2024 22:14:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:14:41 - Resolving eureka endpoints via configuration
08/08/2024 22:14:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:14:43 - Accept=[application/json, application/*+json]
08/08/2024 22:14:43 - Response 200 OK
08/08/2024 22:14:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:14:43 - Accept=[application/json, application/*+json]
08/08/2024 22:14:43 - Response 200 OK
08/08/2024 22:14:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:15:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:15:13 - Accept=[application/json, application/*+json]
08/08/2024 22:15:13 - Response 200 OK
08/08/2024 22:15:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:15:13 - Accept=[application/json, application/*+json]
08/08/2024 22:15:13 - Response 200 OK
08/08/2024 22:15:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:15:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:15:43 - Accept=[application/json, application/*+json]
08/08/2024 22:15:43 - Response 200 OK
08/08/2024 22:15:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:15:43 - Accept=[application/json, application/*+json]
08/08/2024 22:15:43 - Response 200 OK
08/08/2024 22:15:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:16:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:16:13 - Accept=[application/json, application/*+json]
08/08/2024 22:16:13 - Response 200 OK
08/08/2024 22:16:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:16:13 - Accept=[application/json, application/*+json]
08/08/2024 22:16:13 - Response 200 OK
08/08/2024 22:16:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:16:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:16:43 - Accept=[application/json, application/*+json]
08/08/2024 22:16:43 - Response 200 OK
08/08/2024 22:16:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:16:43 - Accept=[application/json, application/*+json]
08/08/2024 22:16:43 - Response 200 OK
08/08/2024 22:16:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:17:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:17:13 - Accept=[application/json, application/*+json]
08/08/2024 22:17:13 - Response 200 OK
08/08/2024 22:17:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:17:13 - Accept=[application/json, application/*+json]
08/08/2024 22:17:13 - Response 200 OK
08/08/2024 22:17:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:17:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:17:43 - Accept=[application/json, application/*+json]
08/08/2024 22:17:43 - Response 200 OK
08/08/2024 22:17:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:17:43 - Accept=[application/json, application/*+json]
08/08/2024 22:17:43 - Response 200 OK
08/08/2024 22:17:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:18:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:18:13 - Accept=[application/json, application/*+json]
08/08/2024 22:18:13 - Response 200 OK
08/08/2024 22:18:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:18:13 - Accept=[application/json, application/*+json]
08/08/2024 22:18:13 - Response 200 OK
08/08/2024 22:18:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:18:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:18:43 - Accept=[application/json, application/*+json]
08/08/2024 22:18:43 - Response 200 OK
08/08/2024 22:18:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:18:43 - Accept=[application/json, application/*+json]
08/08/2024 22:18:43 - Response 200 OK
08/08/2024 22:18:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:19:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:19:13 - Accept=[application/json, application/*+json]
08/08/2024 22:19:13 - Response 200 OK
08/08/2024 22:19:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:19:13 - Accept=[application/json, application/*+json]
08/08/2024 22:19:13 - Response 200 OK
08/08/2024 22:19:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:19:41 - Resolving eureka endpoints via configuration
08/08/2024 22:19:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:19:43 - Accept=[application/json, application/*+json]
08/08/2024 22:19:43 - Response 200 OK
08/08/2024 22:19:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:19:43 - Accept=[application/json, application/*+json]
08/08/2024 22:19:43 - Response 200 OK
08/08/2024 22:19:43 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:20:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:20:13 - Accept=[application/json, application/*+json]
08/08/2024 22:20:13 - Response 200 OK
08/08/2024 22:20:13 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:20:13 - Accept=[application/json, application/*+json]
08/08/2024 22:20:13 - Response 200 OK
08/08/2024 22:20:13 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:20:43 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:20:43 - Accept=[application/json, application/*+json]
08/08/2024 22:20:43 - Response 200 OK
08/08/2024 22:20:43 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:20:43 - Accept=[application/json, application/*+json]
08/08/2024 22:20:44 - Response 200 OK
08/08/2024 22:20:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:21:13 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:21:13 - Accept=[application/json, application/*+json]
08/08/2024 22:21:14 - Response 200 OK
08/08/2024 22:21:14 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:21:14 - Accept=[application/json, application/*+json]
08/08/2024 22:21:14 - Response 200 OK
08/08/2024 22:21:14 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:21:44 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:21:44 - Accept=[application/json, application/*+json]
08/08/2024 22:21:44 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:21:44 - Accept=[application/json, application/*+json]
08/08/2024 22:21:44 - Response 200 OK
08/08/2024 22:21:44 - Response 200 OK
08/08/2024 22:21:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:22:14 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:22:14 - Accept=[application/json, application/*+json]
08/08/2024 22:22:14 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:22:14 - Accept=[application/json, application/*+json]
08/08/2024 22:22:14 - Response 200 OK
08/08/2024 22:22:14 - Response 200 OK
08/08/2024 22:22:14 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:22:44 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723164882332
08/08/2024 22:22:44 - Accept=[application/json, application/*+json]
08/08/2024 22:22:44 - Response 200 OK
08/08/2024 22:22:44 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:22:44 - Accept=[application/json, application/*+json]
08/08/2024 22:22:44 - Response 200 OK
08/08/2024 22:22:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:22:56 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
08/08/2024 22:22:56 - Unregistering application BOOKING with eureka with status DOWN
08/08/2024 22:22:56 - Saw local status change event StatusChangeEvent [timestamp=1723166576995, current=DOWN, previous=UP]
08/08/2024 22:22:56 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081: registering service...
08/08/2024 22:22:56 - HTTP POST http://localhost:8070/eureka/apps/BOOKING
08/08/2024 22:22:56 - Accept=[application/json, application/*+json]
08/08/2024 22:22:57 - Writing [InstanceInfo [instanceId = LTAK285336.mercador.local:booking:8081, appName = BOOKING, hostName = 192.168.0.9, status = DOWN, ipAddr = 192.168.0.9, port = 8081, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@2d9b9974] as "application/json"
08/08/2024 22:22:57 - Response 204 NO_CONTENT
08/08/2024 22:22:57 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - registration status: 204
08/08/2024 22:22:57 - Waiting for workers to finish.
08/08/2024 22:22:57 - Successfully waited for workers to finish.
08/08/2024 22:22:57 - stopped bean 'inbound.springCloudBus.anonymous.x0iWnaCvS_qWjLabEjjUKQ'
08/08/2024 22:22:57 - Channel 'booking.rabbit-737715862.springCloudBusInput.errors' has 1 subscriber(s).
08/08/2024 22:22:58 - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
08/08/2024 22:22:58 - Channel 'booking.errorChannel' has 0 subscriber(s).
08/08/2024 22:22:58 - stopped bean '_org.springframework.integration.errorLogger'
08/08/2024 22:22:58 - Closing JPA EntityManagerFactory for persistence unit 'default'
08/08/2024 22:22:58 - Shutting down DiscoveryClient ...
08/08/2024 22:23:01 - Unregistering ...
08/08/2024 22:23:01 - HTTP DELETE http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081
08/08/2024 22:23:01 - Accept=[application/json, application/*+json]
08/08/2024 22:23:01 - Response 200 OK
08/08/2024 22:23:01 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - deregister  status: 200
08/08/2024 22:23:01 - Completed shut down of DiscoveryClient
08/08/2024 22:23:04 - Starting BookingApplication using Java 17.0.8.1 with PID 153176 (D:\sources\california\travel-booking-platform\booking\target\classes started by dsantana in D:\sources\california\travel-booking-platform\booking)
08/08/2024 22:23:04 - Running with Spring Boot v3.2.3, Spring v6.1.4
08/08/2024 22:23:04 - The following 1 profile is active: "dev"
08/08/2024 22:23:04 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:23:04 - Located environment: name=booking, profiles=[default], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:23:04 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:23:04 - Located environment: name=booking, profiles=[dev], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:23:05 - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: @FeignClient can only be specified on an interface
08/08/2024 22:23:05 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
08/08/2024 22:23:05 - Application run failed
java.lang.IllegalArgumentException: @FeignClient can only be specified on an interface
	at org.springframework.util.Assert.isTrue(Assert.java:111) ~[spring-core-6.1.4.jar:6.1.4]
	at org.springframework.cloud.openfeign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:192) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.cloud.openfeign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:151) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.context.annotation.ImportBeanDefinitionRegistrar.registerBeanDefinitions(ImportBeanDefinitionRegistrar.java:86) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:376) ~[spring-context-6.1.4.jar:6.1.4]
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[na:na]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:375) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) ~[spring-boot-3.2.3.jar:3.2.3]
	at com.losolved.booking.BookingApplication.main(BookingApplication.java:20) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.2.3.jar:3.2.3]
08/08/2024 22:23:09 - Starting BookingApplication using Java 17.0.8.1 with PID 153176 (D:\sources\california\travel-booking-platform\booking\target\classes started by dsantana in D:\sources\california\travel-booking-platform\booking)
08/08/2024 22:23:09 - Running with Spring Boot v3.2.3, Spring v6.1.4
08/08/2024 22:23:09 - The following 1 profile is active: "dev"
08/08/2024 22:23:09 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:23:09 - Located environment: name=booking, profiles=[default], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:23:09 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:23:09 - Located environment: name=booking, profiles=[dev], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:23:10 - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: @FeignClient can only be specified on an interface
08/08/2024 22:23:10 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
08/08/2024 22:23:10 - Application run failed
java.lang.IllegalArgumentException: @FeignClient can only be specified on an interface
	at org.springframework.util.Assert.isTrue(Assert.java:111) ~[spring-core-6.1.4.jar:6.1.4]
	at org.springframework.cloud.openfeign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:192) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.cloud.openfeign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:151) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.context.annotation.ImportBeanDefinitionRegistrar.registerBeanDefinitions(ImportBeanDefinitionRegistrar.java:86) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:376) ~[spring-context-6.1.4.jar:6.1.4]
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[na:na]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:375) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) ~[spring-boot-3.2.3.jar:3.2.3]
	at com.losolved.booking.BookingApplication.main(BookingApplication.java:20) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.2.3.jar:3.2.3]
08/08/2024 22:28:54 - Starting BookingApplication using Java 17.0.8.1 with PID 153176 (D:\sources\california\travel-booking-platform\booking\target\classes started by dsantana in D:\sources\california\travel-booking-platform\booking)
08/08/2024 22:28:54 - Running with Spring Boot v3.2.3, Spring v6.1.4
08/08/2024 22:28:54 - The following 1 profile is active: "dev"
08/08/2024 22:28:54 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:28:54 - Located environment: name=booking, profiles=[default], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:28:54 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:28:54 - Located environment: name=booking, profiles=[dev], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:28:55 - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: @FeignClient can only be specified on an interface
08/08/2024 22:28:55 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
08/08/2024 22:28:55 - Application run failed
java.lang.IllegalArgumentException: @FeignClient can only be specified on an interface
	at org.springframework.util.Assert.isTrue(Assert.java:111) ~[spring-core-6.1.4.jar:6.1.4]
	at org.springframework.cloud.openfeign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:192) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.cloud.openfeign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:151) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.context.annotation.ImportBeanDefinitionRegistrar.registerBeanDefinitions(ImportBeanDefinitionRegistrar.java:86) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:376) ~[spring-context-6.1.4.jar:6.1.4]
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[na:na]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:375) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606) ~[spring-context-6.1.4.jar:6.1.4]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354) ~[spring-boot-3.2.3.jar:3.2.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) ~[spring-boot-3.2.3.jar:3.2.3]
	at com.losolved.booking.BookingApplication.main(BookingApplication.java:19) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.2.3.jar:3.2.3]
08/08/2024 22:29:36 - Starting BookingApplication using Java 17.0.8.1 with PID 153176 (D:\sources\california\travel-booking-platform\booking\target\classes started by dsantana in D:\sources\california\travel-booking-platform\booking)
08/08/2024 22:29:36 - Running with Spring Boot v3.2.3, Spring v6.1.4
08/08/2024 22:29:36 - The following 1 profile is active: "dev"
08/08/2024 22:29:36 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:29:36 - Located environment: name=booking, profiles=[default], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:29:36 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:29:36 - Located environment: name=booking, profiles=[dev], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:29:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
08/08/2024 22:29:37 - Finished Spring Data repository scanning in 42 ms. Found 1 JPA repository interface.
08/08/2024 22:29:37 - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
08/08/2024 22:29:37 - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
08/08/2024 22:29:38 - BeanFactory id=e2956ec6-7fcd-3e96-8074-bef8eb1dd929
08/08/2024 22:29:38 - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
08/08/2024 22:29:38 - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 22:29:38 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
08/08/2024 22:29:38 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 22:29:38 - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 22:29:38 - Tomcat initialized with port 8081 (http)
08/08/2024 22:29:38 - Starting service [Tomcat]
08/08/2024 22:29:38 - Starting Servlet engine: [Apache Tomcat/10.1.19]
08/08/2024 22:29:38 - Initializing Spring embedded WebApplicationContext
08/08/2024 22:29:38 - Root WebApplicationContext: initialization completed in 2290 ms
08/08/2024 22:29:38 - Filter 'webMvcObservationFilter' configured for use
08/08/2024 22:29:38 - jdbc:mysql://localhost:3308/bookingdb
08/08/2024 22:29:38 - root
08/08/2024 22:29:38 - Lo2011158
08/08/2024 22:29:38 - com.mysql.jdbc.Driver
08/08/2024 22:29:39 - HHH000204: Processing PersistenceUnitInfo [name: default]
08/08/2024 22:29:39 - HHH000026: Second-level cache disabled
08/08/2024 22:29:39 - No LoadTimeWeaver setup: ignoring JPA class transformer
08/08/2024 22:29:39 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
08/08/2024 22:29:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
08/08/2024 22:29:40 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
08/08/2024 22:29:40 - 10 mappings in 'requestMappingHandlerMapping'
08/08/2024 22:29:40 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
08/08/2024 22:29:40 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
08/08/2024 22:29:40 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
08/08/2024 22:29:42 - Channel 'booking.springCloudBusInput' has 1 subscriber(s).
08/08/2024 22:29:43 - LiveReload server is running on port 35729
08/08/2024 22:29:43 - Eureka HTTP Client uses RestTemplate.
08/08/2024 22:29:43 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
08/08/2024 22:29:43 - Exposing 23 endpoint(s) beneath base path '/actuator'
08/08/2024 22:29:44 - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
08/08/2024 22:29:44 - Channel 'booking.errorChannel' has 1 subscriber(s).
08/08/2024 22:29:44 - started bean '_org.springframework.integration.errorLogger'
08/08/2024 22:29:44 - Setting initial instance status as: STARTING
08/08/2024 22:29:44 - Initializing Eureka in region us-east-1
08/08/2024 22:29:44 - Resolving eureka endpoints via configuration
08/08/2024 22:29:44 - Disable delta property : false
08/08/2024 22:29:44 - Single vip registry refresh property : null
08/08/2024 22:29:44 - Force full registry fetch : false
08/08/2024 22:29:44 - Application is null : false
08/08/2024 22:29:44 - Registered Applications size is zero : true
08/08/2024 22:29:44 - Application version is -1: true
08/08/2024 22:29:44 - Getting all instance registry info from the eureka server
08/08/2024 22:29:44 - HTTP GET http://localhost:8070/eureka/apps/
08/08/2024 22:29:44 - Accept=[application/json, application/*+json]
08/08/2024 22:29:44 - Response 200 OK
08/08/2024 22:29:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:29:44 - The response status is 200
08/08/2024 22:29:44 - Starting heartbeat executor: renew interval is: 30
08/08/2024 22:29:44 - InstanceInfoReplicator onDemand update allowed rate per min is 4
08/08/2024 22:29:44 - Discovery Client initialized at timestamp 1723166984234 with initial instances count: 2
08/08/2024 22:29:44 - Registering application BOOKING with eureka with status UP
08/08/2024 22:29:44 - Saw local status change event StatusChangeEvent [timestamp=1723166984241, current=UP, previous=STARTING]
08/08/2024 22:29:44 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081: registering service...
08/08/2024 22:29:44 - HTTP POST http://localhost:8070/eureka/apps/BOOKING
08/08/2024 22:29:44 - Accept=[application/json, application/*+json]
08/08/2024 22:29:44 - Writing [InstanceInfo [instanceId = LTAK285336.mercador.local:booking:8081, appName = BOOKING, hostName = 192.168.0.9, status = UP, ipAddr = 192.168.0.9, port = 8081, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4c667a8d] as "application/json"
08/08/2024 22:29:44 - Response 204 NO_CONTENT
08/08/2024 22:29:44 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - registration status: 204
08/08/2024 22:29:44 - Tomcat started on port 8081 (http) with context path ''
08/08/2024 22:29:44 - Updating port to 8081
08/08/2024 22:29:45 - Creating binder: rabbit
08/08/2024 22:29:45 - Constructing binder child context for rabbit
08/08/2024 22:29:45 - Caching the binder: rabbit
08/08/2024 22:29:45 - declaring queue for inbound: springCloudBus.anonymous.qtAtH8MyQdGiWh5G259jFA, bound to: springCloudBus
08/08/2024 22:29:45 - Attempting to connect to: [localhost:5672]
08/08/2024 22:29:45 - Created new connection: rabbitConnectionFactory#7ab0f37a:0/SimpleConnection@6c1bac42 [delegate=amqp://guest@127.0.0.1:5672/, localPort=57864]
08/08/2024 22:29:45 - Channel 'rabbit-1305345784.springCloudBusInput.errors' has 1 subscriber(s).
08/08/2024 22:29:45 - Channel 'rabbit-1305345784.springCloudBusInput.errors' has 2 subscriber(s).
08/08/2024 22:29:45 - started bean 'inbound.springCloudBus.anonymous.qtAtH8MyQdGiWh5G259jFA'
08/08/2024 22:29:45 - Started BookingApplication in 11.717 seconds (process running for 2135.956)
08/08/2024 22:29:45 - Condition evaluation unchanged
08/08/2024 22:30:14 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:30:14 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:30:14 - Accept=[application/json, application/*+json]
08/08/2024 22:30:14 - Accept=[application/json, application/*+json]
08/08/2024 22:30:14 - Response 200 OK
08/08/2024 22:30:14 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:30:14 - Response 200 OK
08/08/2024 22:30:44 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:30:44 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:30:44 - Accept=[application/json, application/*+json]
08/08/2024 22:30:44 - Accept=[application/json, application/*+json]
08/08/2024 22:30:44 - Response 200 OK
08/08/2024 22:30:44 - Response 200 OK
08/08/2024 22:30:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:31:14 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:31:14 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:31:14 - Accept=[application/json, application/*+json]
08/08/2024 22:31:14 - Accept=[application/json, application/*+json]
08/08/2024 22:31:14 - Response 200 OK
08/08/2024 22:31:14 - Response 200 OK
08/08/2024 22:31:14 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:31:44 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:31:44 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:31:44 - Accept=[application/json, application/*+json]
08/08/2024 22:31:44 - Accept=[application/json, application/*+json]
08/08/2024 22:31:44 - Response 200 OK
08/08/2024 22:31:44 - Response 200 OK
08/08/2024 22:31:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:32:14 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:32:14 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:32:14 - Accept=[application/json, application/*+json]
08/08/2024 22:32:14 - Accept=[application/json, application/*+json]
08/08/2024 22:32:14 - Response 200 OK
08/08/2024 22:32:14 - Response 200 OK
08/08/2024 22:32:14 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:32:44 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:32:44 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:32:44 - Accept=[application/json, application/*+json]
08/08/2024 22:32:44 - Accept=[application/json, application/*+json]
08/08/2024 22:32:44 - Response 200 OK
08/08/2024 22:32:44 - Response 200 OK
08/08/2024 22:32:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:33:14 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:33:14 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:33:14 - Accept=[application/json, application/*+json]
08/08/2024 22:33:14 - Accept=[application/json, application/*+json]
08/08/2024 22:33:14 - Response 200 OK
08/08/2024 22:33:14 - Response 200 OK
08/08/2024 22:33:14 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:33:44 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:33:44 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:33:44 - Accept=[application/json, application/*+json]
08/08/2024 22:33:44 - Accept=[application/json, application/*+json]
08/08/2024 22:33:44 - Response 200 OK
08/08/2024 22:33:44 - Response 200 OK
08/08/2024 22:33:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:34:14 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:34:14 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:34:14 - Accept=[application/json, application/*+json]
08/08/2024 22:34:14 - Accept=[application/json, application/*+json]
08/08/2024 22:34:14 - Response 200 OK
08/08/2024 22:34:14 - Response 200 OK
08/08/2024 22:34:14 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:34:44 - Resolving eureka endpoints via configuration
08/08/2024 22:34:44 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:34:44 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:34:44 - Accept=[application/json, application/*+json]
08/08/2024 22:34:44 - Accept=[application/json, application/*+json]
08/08/2024 22:34:44 - Response 200 OK
08/08/2024 22:34:44 - Response 200 OK
08/08/2024 22:34:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:35:14 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:35:14 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:35:14 - Accept=[application/json, application/*+json]
08/08/2024 22:35:14 - Accept=[application/json, application/*+json]
08/08/2024 22:35:14 - Response 200 OK
08/08/2024 22:35:14 - Response 200 OK
08/08/2024 22:35:14 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:35:44 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:35:44 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723166984241
08/08/2024 22:35:44 - Accept=[application/json, application/*+json]
08/08/2024 22:35:44 - Accept=[application/json, application/*+json]
08/08/2024 22:35:44 - Response 200 OK
08/08/2024 22:35:44 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:35:44 - Response 200 OK
08/08/2024 22:35:53 - Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
08/08/2024 22:35:53 - Unregistering application BOOKING with eureka with status DOWN
08/08/2024 22:35:53 - Saw local status change event StatusChangeEvent [timestamp=1723167353871, current=DOWN, previous=UP]
08/08/2024 22:35:53 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081: registering service...
08/08/2024 22:35:53 - HTTP POST http://localhost:8070/eureka/apps/BOOKING
08/08/2024 22:35:53 - Accept=[application/json, application/*+json]
08/08/2024 22:35:53 - Writing [InstanceInfo [instanceId = LTAK285336.mercador.local:booking:8081, appName = BOOKING, hostName = 192.168.0.9, status = DOWN, ipAddr = 192.168.0.9, port = 8081, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4c667a8d] as "application/json"
08/08/2024 22:35:53 - Response 204 NO_CONTENT
08/08/2024 22:35:53 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - registration status: 204
08/08/2024 22:35:53 - Waiting for workers to finish.
08/08/2024 22:35:54 - Successfully waited for workers to finish.
08/08/2024 22:35:54 - stopped bean 'inbound.springCloudBus.anonymous.qtAtH8MyQdGiWh5G259jFA'
08/08/2024 22:35:54 - Channel 'booking.rabbit-1305345784.springCloudBusInput.errors' has 1 subscriber(s).
08/08/2024 22:35:54 - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
08/08/2024 22:35:54 - Channel 'booking.errorChannel' has 0 subscriber(s).
08/08/2024 22:35:54 - stopped bean '_org.springframework.integration.errorLogger'
08/08/2024 22:35:54 - Closing JPA EntityManagerFactory for persistence unit 'default'
08/08/2024 22:35:54 - Shutting down DiscoveryClient ...
08/08/2024 22:35:57 - Unregistering ...
08/08/2024 22:35:57 - HTTP DELETE http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081
08/08/2024 22:35:57 - Accept=[application/json, application/*+json]
08/08/2024 22:35:57 - Response 200 OK
08/08/2024 22:35:57 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - deregister  status: 200
08/08/2024 22:35:57 - Completed shut down of DiscoveryClient
08/08/2024 22:36:01 - Starting BookingApplication using Java 17.0.8.1 with PID 153176 (D:\sources\california\travel-booking-platform\booking\target\classes started by dsantana in D:\sources\california\travel-booking-platform\booking)
08/08/2024 22:36:01 - Running with Spring Boot v3.2.3, Spring v6.1.4
08/08/2024 22:36:01 - The following 1 profile is active: "dev"
08/08/2024 22:36:01 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:36:01 - Located environment: name=booking, profiles=[default], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:36:01 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:36:01 - Located environment: name=booking, profiles=[dev], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:36:02 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
08/08/2024 22:36:02 - Finished Spring Data repository scanning in 28 ms. Found 1 JPA repository interface.
08/08/2024 22:36:02 - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
08/08/2024 22:36:02 - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
08/08/2024 22:36:02 - BeanFactory id=e2956ec6-7fcd-3e96-8074-bef8eb1dd929
08/08/2024 22:36:02 - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
08/08/2024 22:36:02 - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 22:36:02 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
08/08/2024 22:36:02 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 22:36:02 - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 22:36:02 - Tomcat initialized with port 8081 (http)
08/08/2024 22:36:02 - Starting service [Tomcat]
08/08/2024 22:36:02 - Starting Servlet engine: [Apache Tomcat/10.1.19]
08/08/2024 22:36:02 - Initializing Spring embedded WebApplicationContext
08/08/2024 22:36:02 - Root WebApplicationContext: initialization completed in 1578 ms
08/08/2024 22:36:02 - Filter 'webMvcObservationFilter' configured for use
08/08/2024 22:36:02 - jdbc:mysql://localhost:3308/bookingdb
08/08/2024 22:36:02 - root
08/08/2024 22:36:02 - Lo2011158
08/08/2024 22:36:02 - com.mysql.jdbc.Driver
08/08/2024 22:36:03 - HHH000204: Processing PersistenceUnitInfo [name: default]
08/08/2024 22:36:03 - HHH000026: Second-level cache disabled
08/08/2024 22:36:03 - No LoadTimeWeaver setup: ignoring JPA class transformer
08/08/2024 22:36:03 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
08/08/2024 22:36:03 - Initialized JPA EntityManagerFactory for persistence unit 'default'
08/08/2024 22:36:03 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
08/08/2024 22:36:03 - 10 mappings in 'requestMappingHandlerMapping'
08/08/2024 22:36:03 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
08/08/2024 22:36:04 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
08/08/2024 22:36:04 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
08/08/2024 22:36:06 - Channel 'booking.springCloudBusInput' has 1 subscriber(s).
08/08/2024 22:36:06 - LiveReload server is running on port 35729
08/08/2024 22:36:07 - Eureka HTTP Client uses RestTemplate.
08/08/2024 22:36:07 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
08/08/2024 22:36:07 - Exposing 23 endpoint(s) beneath base path '/actuator'
08/08/2024 22:36:07 - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
08/08/2024 22:36:07 - Channel 'booking.errorChannel' has 1 subscriber(s).
08/08/2024 22:36:07 - started bean '_org.springframework.integration.errorLogger'
08/08/2024 22:36:07 - Setting initial instance status as: STARTING
08/08/2024 22:36:07 - Initializing Eureka in region us-east-1
08/08/2024 22:36:07 - Resolving eureka endpoints via configuration
08/08/2024 22:36:07 - Disable delta property : false
08/08/2024 22:36:07 - Single vip registry refresh property : null
08/08/2024 22:36:07 - Force full registry fetch : false
08/08/2024 22:36:07 - Application is null : false
08/08/2024 22:36:07 - Registered Applications size is zero : true
08/08/2024 22:36:07 - Application version is -1: true
08/08/2024 22:36:07 - Getting all instance registry info from the eureka server
08/08/2024 22:36:07 - HTTP GET http://localhost:8070/eureka/apps/
08/08/2024 22:36:07 - Accept=[application/json, application/*+json]
08/08/2024 22:36:07 - Response 200 OK
08/08/2024 22:36:07 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:36:07 - The response status is 200
08/08/2024 22:36:07 - Starting heartbeat executor: renew interval is: 30
08/08/2024 22:36:07 - InstanceInfoReplicator onDemand update allowed rate per min is 4
08/08/2024 22:36:07 - Discovery Client initialized at timestamp 1723167367827 with initial instances count: 2
08/08/2024 22:36:07 - Registering application BOOKING with eureka with status UP
08/08/2024 22:36:07 - Saw local status change event StatusChangeEvent [timestamp=1723167367839, current=UP, previous=STARTING]
08/08/2024 22:36:07 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081: registering service...
08/08/2024 22:36:07 - HTTP POST http://localhost:8070/eureka/apps/BOOKING
08/08/2024 22:36:07 - Accept=[application/json, application/*+json]
08/08/2024 22:36:07 - Writing [InstanceInfo [instanceId = LTAK285336.mercador.local:booking:8081, appName = BOOKING, hostName = 192.168.0.9, status = UP, ipAddr = 192.168.0.9, port = 8081, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@6c78769e] as "application/json"
08/08/2024 22:36:07 - Response 204 NO_CONTENT
08/08/2024 22:36:07 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - registration status: 204
08/08/2024 22:36:07 - Tomcat started on port 8081 (http) with context path ''
08/08/2024 22:36:07 - Updating port to 8081
08/08/2024 22:36:08 - Creating binder: rabbit
08/08/2024 22:36:08 - Constructing binder child context for rabbit
08/08/2024 22:36:08 - Caching the binder: rabbit
08/08/2024 22:36:09 - declaring queue for inbound: springCloudBus.anonymous.phFBDvrYQjOtvZHalPk-eA, bound to: springCloudBus
08/08/2024 22:36:09 - Attempting to connect to: [localhost:5672]
08/08/2024 22:36:09 - Created new connection: rabbitConnectionFactory#75859eb2:0/SimpleConnection@4eec8260 [delegate=amqp://guest@127.0.0.1:5672/, localPort=58158]
08/08/2024 22:36:09 - Channel 'rabbit-1239858804.springCloudBusInput.errors' has 1 subscriber(s).
08/08/2024 22:36:09 - Channel 'rabbit-1239858804.springCloudBusInput.errors' has 2 subscriber(s).
08/08/2024 22:36:09 - started bean 'inbound.springCloudBus.anonymous.phFBDvrYQjOtvZHalPk-eA'
08/08/2024 22:36:09 - Started BookingApplication in 11.02 seconds (process running for 2519.6)
08/08/2024 22:36:09 - Condition evaluation unchanged
08/08/2024 22:36:37 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167367839
08/08/2024 22:36:37 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:36:37 - Accept=[application/json, application/*+json]
08/08/2024 22:36:37 - Accept=[application/json, application/*+json]
08/08/2024 22:36:37 - Response 200 OK
08/08/2024 22:36:37 - Response 200 OK
08/08/2024 22:36:37 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:37:07 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:37:07 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167367839
08/08/2024 22:37:07 - Accept=[application/json, application/*+json]
08/08/2024 22:37:07 - Accept=[application/json, application/*+json]
08/08/2024 22:37:07 - Response 200 OK
08/08/2024 22:37:07 - Response 200 OK
08/08/2024 22:37:07 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:37:21 - Restarting due to 13 class path changes (11 additions, 0 deletions, 2 modifications)
08/08/2024 22:37:21 - Unregistering application BOOKING with eureka with status DOWN
08/08/2024 22:37:21 - Saw local status change event StatusChangeEvent [timestamp=1723167441039, current=DOWN, previous=UP]
08/08/2024 22:37:21 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081: registering service...
08/08/2024 22:37:21 - HTTP POST http://localhost:8070/eureka/apps/BOOKING
08/08/2024 22:37:21 - Accept=[application/json, application/*+json]
08/08/2024 22:37:21 - Writing [InstanceInfo [instanceId = LTAK285336.mercador.local:booking:8081, appName = BOOKING, hostName = 192.168.0.9, status = DOWN, ipAddr = 192.168.0.9, port = 8081, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@6c78769e] as "application/json"
08/08/2024 22:37:21 - Response 204 NO_CONTENT
08/08/2024 22:37:21 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - registration status: 204
08/08/2024 22:37:21 - Waiting for workers to finish.
08/08/2024 22:37:21 - Successfully waited for workers to finish.
08/08/2024 22:37:21 - stopped bean 'inbound.springCloudBus.anonymous.phFBDvrYQjOtvZHalPk-eA'
08/08/2024 22:37:21 - Channel 'booking.rabbit-1239858804.springCloudBusInput.errors' has 1 subscriber(s).
08/08/2024 22:37:21 - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
08/08/2024 22:37:21 - Channel 'booking.errorChannel' has 0 subscriber(s).
08/08/2024 22:37:21 - stopped bean '_org.springframework.integration.errorLogger'
08/08/2024 22:37:21 - Closing JPA EntityManagerFactory for persistence unit 'default'
08/08/2024 22:37:21 - Shutting down DiscoveryClient ...
08/08/2024 22:37:24 - Unregistering ...
08/08/2024 22:37:24 - HTTP DELETE http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081
08/08/2024 22:37:24 - Accept=[application/json, application/*+json]
08/08/2024 22:37:24 - Response 200 OK
08/08/2024 22:37:24 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - deregister  status: 200
08/08/2024 22:37:25 - Completed shut down of DiscoveryClient
08/08/2024 22:37:27 - Starting BookingApplication using Java 17.0.8.1 with PID 153176 (D:\sources\california\travel-booking-platform\booking\target\classes started by dsantana in D:\sources\california\travel-booking-platform\booking)
08/08/2024 22:37:27 - Running with Spring Boot v3.2.3, Spring v6.1.4
08/08/2024 22:37:27 - The following 1 profile is active: "dev"
08/08/2024 22:37:27 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:37:27 - Located environment: name=booking, profiles=[default], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:37:27 - Fetching config from server at : http://localhost:8071/
08/08/2024 22:37:27 - Located environment: name=booking, profiles=[dev], label=null, version=5589e4d3fb3f7a4fee5c5d8304d45c903708378e, state=null
08/08/2024 22:37:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
08/08/2024 22:37:28 - Finished Spring Data repository scanning in 26 ms. Found 1 JPA repository interface.
08/08/2024 22:37:29 - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
08/08/2024 22:37:29 - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
08/08/2024 22:37:29 - BeanFactory id=e2956ec6-7fcd-3e96-8074-bef8eb1dd929
08/08/2024 22:37:29 - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
08/08/2024 22:37:29 - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 22:37:29 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
08/08/2024 22:37:29 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 22:37:29 - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
08/08/2024 22:37:29 - Tomcat initialized with port 8081 (http)
08/08/2024 22:37:29 - Starting service [Tomcat]
08/08/2024 22:37:29 - Starting Servlet engine: [Apache Tomcat/10.1.19]
08/08/2024 22:37:29 - Initializing Spring embedded WebApplicationContext
08/08/2024 22:37:29 - Root WebApplicationContext: initialization completed in 1751 ms
08/08/2024 22:37:29 - Filter 'webMvcObservationFilter' configured for use
08/08/2024 22:37:29 - jdbc:mysql://localhost:3308/bookingdb
08/08/2024 22:37:29 - root
08/08/2024 22:37:29 - Lo2011158
08/08/2024 22:37:29 - com.mysql.jdbc.Driver
08/08/2024 22:37:29 - HHH000204: Processing PersistenceUnitInfo [name: default]
08/08/2024 22:37:29 - HHH000026: Second-level cache disabled
08/08/2024 22:37:29 - No LoadTimeWeaver setup: ignoring JPA class transformer
08/08/2024 22:37:30 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
08/08/2024 22:37:30 - Initialized JPA EntityManagerFactory for persistence unit 'default'
08/08/2024 22:37:30 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
08/08/2024 22:37:30 - 10 mappings in 'requestMappingHandlerMapping'
08/08/2024 22:37:30 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
08/08/2024 22:37:30 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
08/08/2024 22:37:30 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
08/08/2024 22:37:32 - Channel 'booking.springCloudBusInput' has 1 subscriber(s).
08/08/2024 22:37:32 - LiveReload server is running on port 35729
08/08/2024 22:37:33 - Eureka HTTP Client uses RestTemplate.
08/08/2024 22:37:33 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
08/08/2024 22:37:33 - Exposing 23 endpoint(s) beneath base path '/actuator'
08/08/2024 22:37:33 - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
08/08/2024 22:37:33 - Channel 'booking.errorChannel' has 1 subscriber(s).
08/08/2024 22:37:33 - started bean '_org.springframework.integration.errorLogger'
08/08/2024 22:37:33 - Setting initial instance status as: STARTING
08/08/2024 22:37:33 - Initializing Eureka in region us-east-1
08/08/2024 22:37:33 - Resolving eureka endpoints via configuration
08/08/2024 22:37:33 - Disable delta property : false
08/08/2024 22:37:33 - Single vip registry refresh property : null
08/08/2024 22:37:33 - Force full registry fetch : false
08/08/2024 22:37:33 - Application is null : false
08/08/2024 22:37:33 - Registered Applications size is zero : true
08/08/2024 22:37:33 - Application version is -1: true
08/08/2024 22:37:33 - Getting all instance registry info from the eureka server
08/08/2024 22:37:33 - HTTP GET http://localhost:8070/eureka/apps/
08/08/2024 22:37:33 - Accept=[application/json, application/*+json]
08/08/2024 22:37:33 - Response 200 OK
08/08/2024 22:37:33 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:37:33 - The response status is 200
08/08/2024 22:37:33 - Starting heartbeat executor: renew interval is: 30
08/08/2024 22:37:33 - InstanceInfoReplicator onDemand update allowed rate per min is 4
08/08/2024 22:37:33 - Discovery Client initialized at timestamp 1723167453740 with initial instances count: 2
08/08/2024 22:37:33 - Registering application BOOKING with eureka with status UP
08/08/2024 22:37:33 - Saw local status change event StatusChangeEvent [timestamp=1723167453753, current=UP, previous=STARTING]
08/08/2024 22:37:33 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081: registering service...
08/08/2024 22:37:33 - HTTP POST http://localhost:8070/eureka/apps/BOOKING
08/08/2024 22:37:33 - Accept=[application/json, application/*+json]
08/08/2024 22:37:33 - Writing [InstanceInfo [instanceId = LTAK285336.mercador.local:booking:8081, appName = BOOKING, hostName = 192.168.0.9, status = UP, ipAddr = 192.168.0.9, port = 8081, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@60ef76d6] as "application/json"
08/08/2024 22:37:33 - Response 204 NO_CONTENT
08/08/2024 22:37:33 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - registration status: 204
08/08/2024 22:37:33 - Tomcat started on port 8081 (http) with context path ''
08/08/2024 22:37:33 - Updating port to 8081
08/08/2024 22:37:34 - Creating binder: rabbit
08/08/2024 22:37:34 - Constructing binder child context for rabbit
08/08/2024 22:37:34 - Caching the binder: rabbit
08/08/2024 22:37:34 - declaring queue for inbound: springCloudBus.anonymous.IkasZznJQHyVNQl7Ctk2NQ, bound to: springCloudBus
08/08/2024 22:37:34 - Attempting to connect to: [localhost:5672]
08/08/2024 22:37:34 - Created new connection: rabbitConnectionFactory#19cc971:0/SimpleConnection@6ad767d1 [delegate=amqp://guest@127.0.0.1:5672/, localPort=58181]
08/08/2024 22:37:34 - Channel 'rabbit-1304583644.springCloudBusInput.errors' has 1 subscriber(s).
08/08/2024 22:37:34 - Channel 'rabbit-1304583644.springCloudBusInput.errors' has 2 subscriber(s).
08/08/2024 22:37:34 - started bean 'inbound.springCloudBus.anonymous.IkasZznJQHyVNQl7Ctk2NQ'
08/08/2024 22:37:34 - Started BookingApplication in 9.705 seconds (process running for 2605.347)
08/08/2024 22:37:34 - Condition evaluation unchanged
08/08/2024 22:38:03 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:38:03 - Accept=[application/json, application/*+json]
08/08/2024 22:38:03 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:38:03 - Response 200 OK
08/08/2024 22:38:03 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:38:03 - Accept=[application/json, application/*+json]
08/08/2024 22:38:03 - Response 200 OK
08/08/2024 22:38:33 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:38:33 - Accept=[application/json, application/*+json]
08/08/2024 22:38:33 - Response 200 OK
08/08/2024 22:38:33 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:38:33 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:38:33 - Accept=[application/json, application/*+json]
08/08/2024 22:38:33 - Response 200 OK
08/08/2024 22:39:03 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:39:03 - Accept=[application/json, application/*+json]
08/08/2024 22:39:03 - Response 200 OK
08/08/2024 22:39:03 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:39:03 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:39:03 - Accept=[application/json, application/*+json]
08/08/2024 22:39:03 - Response 200 OK
08/08/2024 22:39:33 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:39:33 - Accept=[application/json, application/*+json]
08/08/2024 22:39:33 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:39:33 - Accept=[application/json, application/*+json]
08/08/2024 22:39:33 - Response 200 OK
08/08/2024 22:39:33 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:39:33 - Response 200 OK
08/08/2024 22:40:03 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:40:03 - Accept=[application/json, application/*+json]
08/08/2024 22:40:03 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:40:03 - Accept=[application/json, application/*+json]
08/08/2024 22:40:03 - Response 200 OK
08/08/2024 22:40:03 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:40:03 - Response 200 OK
08/08/2024 22:40:33 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:40:33 - Accept=[application/json, application/*+json]
08/08/2024 22:40:33 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:40:33 - Accept=[application/json, application/*+json]
08/08/2024 22:40:33 - Response 200 OK
08/08/2024 22:40:33 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:40:33 - Response 200 OK
08/08/2024 22:41:03 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:41:03 - Accept=[application/json, application/*+json]
08/08/2024 22:41:03 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:41:03 - Accept=[application/json, application/*+json]
08/08/2024 22:41:03 - Response 200 OK
08/08/2024 22:41:03 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:41:03 - Response 200 OK
08/08/2024 22:41:33 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:41:33 - Accept=[application/json, application/*+json]
08/08/2024 22:41:33 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:41:33 - Accept=[application/json, application/*+json]
08/08/2024 22:41:33 - Response 200 OK
08/08/2024 22:41:33 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:41:33 - Response 200 OK
08/08/2024 22:42:03 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:42:03 - Accept=[application/json, application/*+json]
08/08/2024 22:42:03 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:42:03 - Accept=[application/json, application/*+json]
08/08/2024 22:42:03 - Response 200 OK
08/08/2024 22:42:03 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:42:04 - Response 200 OK
08/08/2024 22:42:33 - Resolving eureka endpoints via configuration
08/08/2024 22:42:34 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:42:34 - Accept=[application/json, application/*+json]
08/08/2024 22:42:34 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:42:34 - Accept=[application/json, application/*+json]
08/08/2024 22:42:34 - Response 200 OK
08/08/2024 22:42:34 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:42:34 - Response 200 OK
08/08/2024 22:43:04 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:43:04 - Accept=[application/json, application/*+json]
08/08/2024 22:43:04 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:43:04 - Accept=[application/json, application/*+json]
08/08/2024 22:43:04 - Response 200 OK
08/08/2024 22:43:04 - Response 200 OK
08/08/2024 22:43:04 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:43:34 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:43:34 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:43:34 - Accept=[application/json, application/*+json]
08/08/2024 22:43:34 - Accept=[application/json, application/*+json]
08/08/2024 22:43:34 - Response 200 OK
08/08/2024 22:43:34 - Response 200 OK
08/08/2024 22:43:34 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:44:04 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:44:04 - Accept=[application/json, application/*+json]
08/08/2024 22:44:04 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:44:04 - Accept=[application/json, application/*+json]
08/08/2024 22:44:04 - Response 200 OK
08/08/2024 22:44:04 - Response 200 OK
08/08/2024 22:44:04 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:44:34 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:44:34 - Accept=[application/json, application/*+json]
08/08/2024 22:44:34 - Response 200 OK
08/08/2024 22:44:34 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:44:34 - Accept=[application/json, application/*+json]
08/08/2024 22:44:34 - Response 200 OK
08/08/2024 22:44:34 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:45:04 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:45:04 - Accept=[application/json, application/*+json]
08/08/2024 22:45:04 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:45:04 - Accept=[application/json, application/*+json]
08/08/2024 22:45:04 - Response 200 OK
08/08/2024 22:45:04 - Response 200 OK
08/08/2024 22:45:04 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:45:34 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:45:34 - Accept=[application/json, application/*+json]
08/08/2024 22:45:34 - Response 200 OK
08/08/2024 22:45:34 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:45:34 - Accept=[application/json, application/*+json]
08/08/2024 22:45:34 - Response 200 OK
08/08/2024 22:45:34 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:46:04 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:46:04 - Accept=[application/json, application/*+json]
08/08/2024 22:46:04 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:46:04 - Accept=[application/json, application/*+json]
08/08/2024 22:46:04 - Response 200 OK
08/08/2024 22:46:04 - Response 200 OK
08/08/2024 22:46:04 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:46:34 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:46:34 - Accept=[application/json, application/*+json]
08/08/2024 22:46:34 - Response 200 OK
08/08/2024 22:46:34 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:46:34 - Accept=[application/json, application/*+json]
08/08/2024 22:46:34 - Response 200 OK
08/08/2024 22:46:34 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:47:04 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:47:04 - Accept=[application/json, application/*+json]
08/08/2024 22:47:04 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:47:04 - Accept=[application/json, application/*+json]
08/08/2024 22:47:04 - Response 200 OK
08/08/2024 22:47:04 - Response 200 OK
08/08/2024 22:47:04 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:47:33 - Resolving eureka endpoints via configuration
08/08/2024 22:47:34 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:47:34 - Accept=[application/json, application/*+json]
08/08/2024 22:47:34 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:47:34 - Accept=[application/json, application/*+json]
08/08/2024 22:47:34 - Response 200 OK
08/08/2024 22:47:34 - Response 200 OK
08/08/2024 22:47:34 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
08/08/2024 22:48:04 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1723167453753
08/08/2024 22:48:04 - Accept=[application/json, application/*+json]
08/08/2024 22:48:04 - HTTP GET http://localhost:8070/eureka/apps/delta
08/08/2024 22:48:04 - Accept=[application/json, application/*+json]
08/08/2024 22:48:04 - Response 200 OK
08/08/2024 22:48:04 - Response 200 OK
08/08/2024 22:48:04 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
