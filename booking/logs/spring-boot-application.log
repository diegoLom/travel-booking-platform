20/07/2024 09:12:35 - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/california/repo/org/json/json/20240303/json-20240303.jar!/org/json/JSONObject.class
	jar:file:/D:/california/repo/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

20/07/2024 09:12:35 - Starting AuditAwareTest using Java 17.0.10 with PID 24808 (started by dsantana in D:\sources\california\travel-booking-platform\booking)
20/07/2024 09:12:35 - Running with Spring Boot v3.2.3, Spring v6.1.4
20/07/2024 09:12:35 - The following 1 profile is active: "dev"
20/07/2024 09:12:35 - Fetching config from server at : http://localhost:8071/
20/07/2024 09:12:35 - Exception on Url - http://localhost:8071/:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information. Will be trying the next url if available
20/07/2024 09:12:35 - Could not locate PropertySource ([ConfigServerConfigDataResource@7808f638 uris = array<String>['http://localhost:8071/'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information
20/07/2024 09:12:35 - Fetching config from server at : http://localhost:8071/
20/07/2024 09:12:35 - Exception on Url - http://localhost:8071/:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8071/booking/dev": Connection refused: no further information. Will be trying the next url if available
20/07/2024 09:12:35 - Could not locate PropertySource ([ConfigServerConfigDataResource@3b9632d1 uris = array<String>['http://localhost:8071/'], optional = true, profiles = 'dev']): I/O error on GET request for "http://localhost:8071/booking/dev": Connection refused: no further information
20/07/2024 09:12:35 - Fetching config from server at : http://localhost:8071/
20/07/2024 09:12:35 - Exception on Url - http://localhost:8071/:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information. Will be trying the next url if available
20/07/2024 09:12:35 - Could not locate PropertySource ([ConfigServerConfigDataResource@4e6f2bb5 uris = array<String>['http://localhost:8071/'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information
20/07/2024 09:12:35 - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@56afdf9a
20/07/2024 09:12:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/07/2024 09:12:40 - Finished Spring Data repository scanning in 530 ms. Found 1 JPA repository interface.
20/07/2024 09:12:41 - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
20/07/2024 09:12:41 - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
20/07/2024 09:12:42 - BeanFactory id=a9d24de6-a37d-3f9f-887f-09eda81b66d7
20/07/2024 09:12:43 - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
20/07/2024 09:12:43 - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
20/07/2024 09:12:43 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
20/07/2024 09:12:43 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
20/07/2024 09:12:43 - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
20/07/2024 09:12:43 - null
20/07/2024 09:12:43 - null
20/07/2024 09:12:43 - null
20/07/2024 09:12:43 - null
20/07/2024 09:12:43 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [com/losolved/booking/configuration/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
20/07/2024 09:12:44 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
20/07/2024 09:12:44 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [com/losolved/booking/configuration/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$before$2(ClassBasedTestDescriptor.java:204)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:85)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:148)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/losolved/booking/configuration/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 92 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	... 106 common frames omitted
Caused by: java.lang.IllegalArgumentException: Property 'driverClassName' must not be empty
	at org.springframework.util.Assert.hasText(Assert.java:240)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(DriverManagerDataSource.java:125)
	at com.losolved.booking.configuration.DatabaseConfig.dataSource(DatabaseConfig.java:40)
	at com.losolved.booking.configuration.DatabaseConfig$$SpringCGLIB$$0.CGLIB$dataSource$0(<generated>)
	at com.losolved.booking.configuration.DatabaseConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.losolved.booking.configuration.DatabaseConfig$$SpringCGLIB$$0.dataSource(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 107 common frames omitted
20/07/2024 09:12:44 - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.losolved.booking.audit.AuditAwareTest@56fa0ef]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@3d2eb7fa testClass = com.losolved.booking.audit.AuditAwareTest, locations = [], classes = [com.losolved.booking.BookingApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@21129f1f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@68d279ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@488d1cd7, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@7fbdb894, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@79dc5318, org.springframework.boot.test.context.SpringBootTestAnnotation@7c61a2f6], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$before$2(ClassBasedTestDescriptor.java:204)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:203)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:85)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:148)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [com/losolved/booking/configuration/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 66 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/losolved/booking/configuration/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 92 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	... 106 common frames omitted
Caused by: java.lang.IllegalArgumentException: Property 'driverClassName' must not be empty
	at org.springframework.util.Assert.hasText(Assert.java:240)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(DriverManagerDataSource.java:125)
	at com.losolved.booking.configuration.DatabaseConfig.dataSource(DatabaseConfig.java:40)
	at com.losolved.booking.configuration.DatabaseConfig$$SpringCGLIB$$0.CGLIB$dataSource$0(<generated>)
	at com.losolved.booking.configuration.DatabaseConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.losolved.booking.configuration.DatabaseConfig$$SpringCGLIB$$0.dataSource(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 107 common frames omitted
20/07/2024 09:12:44 - Restart disabled due to context in which it is running
20/07/2024 09:12:45 - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/california/repo/org/json/json/20240303/json-20240303.jar!/org/json/JSONObject.class
	jar:file:/D:/california/repo/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

20/07/2024 09:12:45 - Starting BookingApplicationTests using Java 17.0.10 with PID 24808 (started by dsantana in D:\sources\california\travel-booking-platform\booking)
20/07/2024 09:12:45 - Running with Spring Boot v3.2.3, Spring v6.1.4
20/07/2024 09:12:45 - The following 1 profile is active: "dev"
20/07/2024 09:12:45 - Fetching config from server at : http://localhost:8071/
20/07/2024 09:12:45 - Exception on Url - http://localhost:8071/:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information. Will be trying the next url if available
20/07/2024 09:12:45 - Could not locate PropertySource ([ConfigServerConfigDataResource@2c978637 uris = array<String>['http://localhost:8071/'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information
20/07/2024 09:12:45 - Fetching config from server at : http://localhost:8071/
20/07/2024 09:12:45 - Exception on Url - http://localhost:8071/:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8071/booking/dev": Connection refused: no further information. Will be trying the next url if available
20/07/2024 09:12:45 - Could not locate PropertySource ([ConfigServerConfigDataResource@5e2718b3 uris = array<String>['http://localhost:8071/'], optional = true, profiles = 'dev']): I/O error on GET request for "http://localhost:8071/booking/dev": Connection refused: no further information
20/07/2024 09:12:45 - Fetching config from server at : http://localhost:8071/
20/07/2024 09:12:45 - Exception on Url - http://localhost:8071/:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information. Will be trying the next url if available
20/07/2024 09:12:45 - Could not locate PropertySource ([ConfigServerConfigDataResource@440461ef uris = array<String>['http://localhost:8071/'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information
20/07/2024 09:12:45 - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6c225adb
20/07/2024 09:12:46 - Started BookingApplicationTests in 1.657 seconds (process running for 17.252)
20/07/2024 09:12:47 - Closing org.springframework.web.context.support.GenericWebApplicationContext@6c225adb, started on Sat Jul 20 09:12:45 BRT 2024
20/07/2024 20:08:59 - Starting BookingApplication using Java 17.0.8.1 with PID 25888 (D:\sources\california\travel-booking-platform\booking\target\classes started by dsantana in D:\sources\california\travel-booking-platform\booking)
20/07/2024 20:08:59 - Running with Spring Boot v3.2.3, Spring v6.1.4
20/07/2024 20:08:59 - The following 1 profile is active: "dev"
20/07/2024 20:08:59 - Fetching config from server at : http://localhost:8071/
20/07/2024 20:08:59 - Exception on Url - http://localhost:8071/:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information. Will be trying the next url if available
20/07/2024 20:08:59 - Could not locate PropertySource ([ConfigServerConfigDataResource@42ad8ccd uris = array<String>['http://localhost:8071/'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information
20/07/2024 20:08:59 - Fetching config from server at : http://localhost:8071/
20/07/2024 20:08:59 - Exception on Url - http://localhost:8071/:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8071/booking/dev": Connection refused: no further information. Will be trying the next url if available
20/07/2024 20:08:59 - Could not locate PropertySource ([ConfigServerConfigDataResource@63aaf8f3 uris = array<String>['http://localhost:8071/'], optional = true, profiles = 'dev']): I/O error on GET request for "http://localhost:8071/booking/dev": Connection refused: no further information
20/07/2024 20:08:59 - Fetching config from server at : http://localhost:8071/
20/07/2024 20:08:59 - Exception on Url - http://localhost:8071/:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information. Will be trying the next url if available
20/07/2024 20:08:59 - Could not locate PropertySource ([ConfigServerConfigDataResource@12c9c810 uris = array<String>['http://localhost:8071/'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8071/booking/default": Connection refused: no further information
20/07/2024 20:08:59 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
20/07/2024 20:08:59 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
20/07/2024 20:09:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/07/2024 20:09:05 - Finished Spring Data repository scanning in 579 ms. Found 1 JPA repository interface.
20/07/2024 20:09:06 - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
20/07/2024 20:09:06 - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
20/07/2024 20:09:07 - BeanFactory id=988f223c-5daf-3610-bca4-d16d12d86803
20/07/2024 20:09:08 - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
20/07/2024 20:09:08 - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
20/07/2024 20:09:08 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
20/07/2024 20:09:08 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
20/07/2024 20:09:08 - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
20/07/2024 20:09:10 - Tomcat initialized with port 8081 (http)
20/07/2024 20:09:10 - Starting service [Tomcat]
20/07/2024 20:09:10 - Starting Servlet engine: [Apache Tomcat/10.1.19]
20/07/2024 20:09:10 - Initializing Spring embedded WebApplicationContext
20/07/2024 20:09:10 - Root WebApplicationContext: initialization completed in 11780 ms
20/07/2024 20:09:11 - Filter 'webMvcObservationFilter' configured for use
20/07/2024 20:09:11 - null
20/07/2024 20:09:11 - null
20/07/2024 20:09:11 - null
20/07/2024 20:09:11 - null
20/07/2024 20:09:11 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [com/losolved/booking/configuration/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
20/07/2024 20:09:11 - Stopping service [Tomcat]
20/07/2024 20:09:11 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
20/07/2024 20:09:12 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [com/losolved/booking/configuration/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.losolved.booking.BookingApplication.main(BookingApplication.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/losolved/booking/configuration/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 26 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Property 'driverClassName' must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	... 40 common frames omitted
Caused by: java.lang.IllegalArgumentException: Property 'driverClassName' must not be empty
	at org.springframework.util.Assert.hasText(Assert.java:240)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(DriverManagerDataSource.java:125)
	at com.losolved.booking.configuration.DatabaseConfig.dataSource(DatabaseConfig.java:40)
	at com.losolved.booking.configuration.DatabaseConfig$$SpringCGLIB$$0.CGLIB$dataSource$0(<generated>)
	at com.losolved.booking.configuration.DatabaseConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.losolved.booking.configuration.DatabaseConfig$$SpringCGLIB$$0.dataSource(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 41 common frames omitted
20/07/2024 20:13:02 - Starting BookingApplication using Java 17.0.8.1 with PID 32996 (D:\sources\california\travel-booking-platform\booking\target\classes started by dsantana in D:\sources\california\travel-booking-platform\booking)
20/07/2024 20:13:02 - Running with Spring Boot v3.2.3, Spring v6.1.4
20/07/2024 20:13:02 - The following 1 profile is active: "dev"
20/07/2024 20:13:02 - Fetching config from server at : http://localhost:8071/
20/07/2024 20:13:02 - Located environment: name=booking, profiles=[default], label=null, version=313a96bdbc307758edc6ce0a8292ea4ea6d1d443, state=null
20/07/2024 20:13:02 - Fetching config from server at : http://localhost:8071/
20/07/2024 20:13:02 - Located environment: name=booking, profiles=[dev], label=null, version=313a96bdbc307758edc6ce0a8292ea4ea6d1d443, state=null
20/07/2024 20:13:02 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
20/07/2024 20:13:02 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
20/07/2024 20:13:07 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/07/2024 20:13:07 - Finished Spring Data repository scanning in 539 ms. Found 1 JPA repository interface.
20/07/2024 20:13:08 - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
20/07/2024 20:13:08 - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
20/07/2024 20:13:09 - BeanFactory id=988f223c-5daf-3610-bca4-d16d12d86803
20/07/2024 20:13:10 - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
20/07/2024 20:13:10 - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
20/07/2024 20:13:10 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
20/07/2024 20:13:10 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
20/07/2024 20:13:10 - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
20/07/2024 20:13:12 - Tomcat initialized with port 8081 (http)
20/07/2024 20:13:12 - Starting service [Tomcat]
20/07/2024 20:13:12 - Starting Servlet engine: [Apache Tomcat/10.1.19]
20/07/2024 20:13:12 - Initializing Spring embedded WebApplicationContext
20/07/2024 20:13:12 - Root WebApplicationContext: initialization completed in 10233 ms
20/07/2024 20:13:13 - Filter 'webMvcObservationFilter' configured for use
20/07/2024 20:13:13 - jdbc:mysql://localhost:3308/bookingdb
20/07/2024 20:13:13 - root
20/07/2024 20:13:13 - Lo2011158
20/07/2024 20:13:13 - com.mysql.jdbc.Driver
20/07/2024 20:13:15 - HHH000204: Processing PersistenceUnitInfo [name: default]
20/07/2024 20:13:15 - HHH000412: Hibernate ORM core version 6.4.4.Final
20/07/2024 20:13:16 - HHH000026: Second-level cache disabled
20/07/2024 20:13:16 - No LoadTimeWeaver setup: ignoring JPA class transformer
20/07/2024 20:13:22 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/07/2024 20:13:22 - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/07/2024 20:13:24 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/07/2024 20:13:25 - 6 mappings in 'requestMappingHandlerMapping'
20/07/2024 20:13:25 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
20/07/2024 20:13:26 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
20/07/2024 20:13:26 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
20/07/2024 20:13:32 - Channel 'booking.springCloudBusInput' has 1 subscriber(s).
20/07/2024 20:13:34 - LiveReload server is running on port 35729
20/07/2024 20:13:35 - Eureka HTTP Client uses RestTemplate.
20/07/2024 20:13:35 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
20/07/2024 20:13:36 - Exposing 23 endpoint(s) beneath base path '/actuator'
20/07/2024 20:13:36 - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
20/07/2024 20:13:36 - Channel 'booking.errorChannel' has 1 subscriber(s).
20/07/2024 20:13:36 - started bean '_org.springframework.integration.errorLogger'
20/07/2024 20:13:36 - Setting initial instance status as: STARTING
20/07/2024 20:13:36 - Initializing Eureka in region us-east-1
20/07/2024 20:13:36 - Resolving eureka endpoints via configuration
20/07/2024 20:13:37 - Disable delta property : false
20/07/2024 20:13:37 - Single vip registry refresh property : null
20/07/2024 20:13:37 - Force full registry fetch : false
20/07/2024 20:13:37 - Application is null : false
20/07/2024 20:13:37 - Registered Applications size is zero : true
20/07/2024 20:13:37 - Application version is -1: true
20/07/2024 20:13:37 - Getting all instance registry info from the eureka server
20/07/2024 20:13:37 - HTTP GET http://localhost:8070/eureka/apps/
20/07/2024 20:13:37 - Accept=[application/json, application/*+json]
20/07/2024 20:13:38 - Response 200 OK
20/07/2024 20:13:38 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:13:38 - The response status is 200
20/07/2024 20:13:38 - Starting heartbeat executor: renew interval is: 30
20/07/2024 20:13:38 - InstanceInfoReplicator onDemand update allowed rate per min is 4
20/07/2024 20:13:38 - Discovery Client initialized at timestamp 1721517218938 with initial instances count: 0
20/07/2024 20:13:38 - Registering application BOOKING with eureka with status UP
20/07/2024 20:13:38 - Saw local status change event StatusChangeEvent [timestamp=1721517218967, current=UP, previous=STARTING]
20/07/2024 20:13:38 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081: registering service...
20/07/2024 20:13:38 - HTTP POST http://localhost:8070/eureka/apps/BOOKING
20/07/2024 20:13:38 - Accept=[application/json, application/*+json]
20/07/2024 20:13:39 - Writing [InstanceInfo [instanceId = LTAK285336.mercador.local:booking:8081, appName = BOOKING, hostName = 192.168.0.13, status = UP, ipAddr = 192.168.0.13, port = 8081, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@6bcfa094] as "application/json"
20/07/2024 20:13:39 - Tomcat started on port 8081 (http) with context path ''
20/07/2024 20:13:39 - Updating port to 8081
20/07/2024 20:13:39 - Response 204 NO_CONTENT
20/07/2024 20:13:39 - DiscoveryClient_BOOKING/LTAK285336.mercador.local:booking:8081 - registration status: 204
20/07/2024 20:13:41 - Creating binder: rabbit
20/07/2024 20:13:41 - Constructing binder child context for rabbit
20/07/2024 20:13:42 - Caching the binder: rabbit
20/07/2024 20:13:42 - declaring queue for inbound: springCloudBus.anonymous.j3VknEuwRZO5U5TBP6s0HA, bound to: springCloudBus
20/07/2024 20:13:42 - Attempting to connect to: [localhost:5672]
20/07/2024 20:13:42 - Created new connection: rabbitConnectionFactory#29ae2d10:0/SimpleConnection@44c14274 [delegate=amqp://guest@127.0.0.1:5672/, localPort=59882]
20/07/2024 20:13:42 - Channel 'rabbit-1011139786.springCloudBusInput.errors' has 1 subscriber(s).
20/07/2024 20:13:42 - Channel 'rabbit-1011139786.springCloudBusInput.errors' has 2 subscriber(s).
20/07/2024 20:13:42 - started bean 'inbound.springCloudBus.anonymous.j3VknEuwRZO5U5TBP6s0HA'
20/07/2024 20:13:42 - Started BookingApplication in 46.971 seconds (process running for 49.849)
20/07/2024 20:14:08 - Disable delta property : false
20/07/2024 20:14:08 - Single vip registry refresh property : null
20/07/2024 20:14:08 - Force full registry fetch : false
20/07/2024 20:14:08 - Application is null : false
20/07/2024 20:14:08 - Registered Applications size is zero : true
20/07/2024 20:14:08 - Application version is -1: false
20/07/2024 20:14:08 - Getting all instance registry info from the eureka server
20/07/2024 20:14:08 - HTTP GET http://localhost:8070/eureka/apps/
20/07/2024 20:14:08 - Accept=[application/json, application/*+json]
20/07/2024 20:14:09 - Response 200 OK
20/07/2024 20:14:09 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:14:09 - The response status is 200
20/07/2024 20:14:09 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:14:09 - Accept=[application/json, application/*+json]
20/07/2024 20:14:09 - Response 200 OK
20/07/2024 20:14:39 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:14:39 - Accept=[application/json, application/*+json]
20/07/2024 20:14:39 - Response 200 OK
20/07/2024 20:14:39 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:14:39 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:14:39 - Accept=[application/json, application/*+json]
20/07/2024 20:14:39 - Response 200 OK
20/07/2024 20:15:09 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:15:09 - Accept=[application/json, application/*+json]
20/07/2024 20:15:09 - Response 200 OK
20/07/2024 20:15:09 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:15:09 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:15:09 - Accept=[application/json, application/*+json]
20/07/2024 20:15:09 - Response 200 OK
20/07/2024 20:15:39 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:15:39 - Accept=[application/json, application/*+json]
20/07/2024 20:15:39 - Response 200 OK
20/07/2024 20:15:39 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:15:39 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:15:39 - Accept=[application/json, application/*+json]
20/07/2024 20:15:39 - Response 200 OK
20/07/2024 20:16:09 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:16:09 - Accept=[application/json, application/*+json]
20/07/2024 20:16:09 - Response 200 OK
20/07/2024 20:16:09 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:16:09 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:16:09 - Accept=[application/json, application/*+json]
20/07/2024 20:16:09 - Response 200 OK
20/07/2024 20:16:39 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:16:39 - Accept=[application/json, application/*+json]
20/07/2024 20:16:39 - Response 200 OK
20/07/2024 20:16:39 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:16:39 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:16:39 - Accept=[application/json, application/*+json]
20/07/2024 20:16:39 - Response 200 OK
20/07/2024 20:17:09 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:17:09 - Accept=[application/json, application/*+json]
20/07/2024 20:17:09 - Response 200 OK
20/07/2024 20:17:09 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:17:09 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:17:09 - Accept=[application/json, application/*+json]
20/07/2024 20:17:09 - Response 200 OK
20/07/2024 20:17:39 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:17:39 - Accept=[application/json, application/*+json]
20/07/2024 20:17:39 - Response 200 OK
20/07/2024 20:17:39 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:17:39 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:17:39 - Accept=[application/json, application/*+json]
20/07/2024 20:17:39 - Response 200 OK
20/07/2024 20:18:09 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:18:09 - Accept=[application/json, application/*+json]
20/07/2024 20:18:09 - Response 200 OK
20/07/2024 20:18:09 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:18:09 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:18:09 - Accept=[application/json, application/*+json]
20/07/2024 20:18:09 - Response 200 OK
20/07/2024 20:18:37 - Resolving eureka endpoints via configuration
20/07/2024 20:18:39 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:18:39 - Accept=[application/json, application/*+json]
20/07/2024 20:18:39 - Response 200 OK
20/07/2024 20:18:39 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:18:39 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:18:39 - Accept=[application/json, application/*+json]
20/07/2024 20:18:39 - Response 200 OK
20/07/2024 20:19:09 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:19:09 - Accept=[application/json, application/*+json]
20/07/2024 20:19:09 - Response 200 OK
20/07/2024 20:19:09 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:19:09 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:19:09 - Accept=[application/json, application/*+json]
20/07/2024 20:19:09 - Response 200 OK
20/07/2024 20:19:39 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:19:39 - Accept=[application/json, application/*+json]
20/07/2024 20:19:39 - Response 200 OK
20/07/2024 20:19:39 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:19:39 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:19:39 - Accept=[application/json, application/*+json]
20/07/2024 20:19:39 - Response 200 OK
20/07/2024 20:20:09 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:20:09 - Accept=[application/json, application/*+json]
20/07/2024 20:20:09 - Response 200 OK
20/07/2024 20:20:09 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:20:09 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:20:09 - Accept=[application/json, application/*+json]
20/07/2024 20:20:09 - Response 200 OK
20/07/2024 20:20:39 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:20:39 - Accept=[application/json, application/*+json]
20/07/2024 20:20:39 - Response 200 OK
20/07/2024 20:20:39 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:20:39 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:20:39 - Accept=[application/json, application/*+json]
20/07/2024 20:20:39 - Response 200 OK
20/07/2024 20:21:09 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:21:09 - Accept=[application/json, application/*+json]
20/07/2024 20:21:09 - Response 200 OK
20/07/2024 20:21:09 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:21:09 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:21:09 - Accept=[application/json, application/*+json]
20/07/2024 20:21:09 - Response 200 OK
20/07/2024 20:21:39 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:21:39 - Accept=[application/json, application/*+json]
20/07/2024 20:21:39 - Response 200 OK
20/07/2024 20:21:39 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:21:39 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:21:39 - Accept=[application/json, application/*+json]
20/07/2024 20:21:39 - Response 200 OK
20/07/2024 20:22:09 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:22:09 - Accept=[application/json, application/*+json]
20/07/2024 20:22:09 - Response 200 OK
20/07/2024 20:22:09 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:22:09 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:22:09 - Accept=[application/json, application/*+json]
20/07/2024 20:22:09 - Response 200 OK
20/07/2024 20:22:39 - HTTP GET http://localhost:8070/eureka/apps/delta
20/07/2024 20:22:39 - Accept=[application/json, application/*+json]
20/07/2024 20:22:39 - Response 200 OK
20/07/2024 20:22:39 - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
20/07/2024 20:22:39 - HTTP PUT http://localhost:8070/eureka/apps/BOOKING/LTAK285336.mercador.local:booking:8081?status=UP&lastDirtyTimestamp=1721517218965
20/07/2024 20:22:39 - Accept=[application/json, application/*+json]
20/07/2024 20:22:39 - Response 200 OK
